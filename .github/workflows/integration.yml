name: Deploy Backend
on:
  push:
    branches:
      - main

# 프론트 빌드 환경설정 넣어서 빌드 -> 백엔드 빌드
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: use node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: create .env
        working-directory: ./front
        run: |
          echo "VITE_BASE_URL=$VITE_BASE_URL" >> env.production
          echo "VITE_REDIRECT_URL=$VITE_REDIRECT_URL" >> env.production
          echo "VITE_NAVER_CLIENT_ID=$VITE_NAVER_CLIENT_ID" >> env.production
        env:
          VITE_BASE_URL: ${{ secrets.VITE_BASE_URL }}
          VITE_REDIRECT_URL: ${{ secrets.VITE_REDIRECT_URL }}
          VITE_NAVER_CLIENT_ID: ${{ secrets.VITE_NAVER_CLIENT_ID }}

      - name: install to build
        working-directory: ./front
        run: |
          npm install && \
          npm run build

      #자바 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      # Gradle wrapper 파일 실행 권한주기
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 빌드
      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: build

      # Docker 로그인
      - run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Docker 이미지 빌드
      - run: docker build -t ${{ secrets.DOCKER_IMAGE_NAME }} -f Dockerfile . # Docerfile로 이미지 생성

      # Docker Hub에 이미지 push
      - run: docker push ${{ secrets.DOCKER_IMAGE_NAME }}

      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'